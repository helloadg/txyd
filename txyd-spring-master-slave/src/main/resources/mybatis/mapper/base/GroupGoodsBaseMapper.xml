<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<!-- use namespace for search -->
<mapper namespace="com.txyd.mapper.GroupGoodsMapper">
  <!--database table: (t_market_group_goods) with javabean : (com.txyd.model.GroupGoodsModel)-->
  <resultMap id="rm_GroupGoodsModel" type="com.txyd.model.GroupGoodsModel">
  <result property="id" column="id"/>
  <result property="fgoodsId" column="f_goods_id"/>
  <result property="status" column="status"/>
  <result property="fgroupId" column="f_group_id"/>
  <result property="ct" column="c_t"/>
  <result property="ut" column="u_t"/>
  <result property="isDeleted" column="is_deleted"/>
  <result property="sortNum" column="sort_num"/>
  </resultMap>
  
  <!--columns of table-->
  <sql id="columns">
    <![CDATA[
		id,f_goods_id,status,f_group_id,c_t,
		u_t,is_deleted,sort_num
     ]]>
  </sql>
  
  <!--the 'where' sql of search  -->
  <sql id="where_sql">
    <where>
      <if test="id != null">
        and id =  #{id}
      </if>
      <if test="fgoodsId != null">
        and f_goods_id =  #{fgoodsId}
      </if>
      <if test="status != null">
        and status =  #{status}
      </if>
      <if test="fgroupId != null">
        and f_group_id =  #{fgroupId}
      </if>
      <if test="ct != null">
        and c_t =  #{ct}
      </if>
      <if test="ut != null">
        and u_t =  #{ut}
      </if>
      <if test="isDeleted != null">
        and is_deleted =  #{isDeleted}
      </if>
      <if test="sortNum != null">
        and sort_num =  #{sortNum}
      </if>
    </where>
  </sql>
  
  <!--the 'where' sql with table alias of search  -->
  <sql id="where_with_alias_sql">
    <where>
      <if test="tb.id != null">
        and id =  #{tb.id}
      </if>
      <if test="tb.fgoodsId != null">
        and f_goods_id =  #{tb.fgoodsId}
      </if>
      <if test="tb.status != null">
        and status =  #{tb.status}
      </if>
      <if test="tb.fgroupId != null">
        and f_group_id =  #{tb.fgroupId}
      </if>
      <if test="tb.ct != null">
        and c_t =  #{tb.ct}
      </if>
      <if test="tb.ut != null">
        and u_t =  #{tb.ut}
      </if>
      <if test="tb.isDeleted != null">
        and is_deleted =  #{tb.isDeleted}
      </if>
      <if test="tb.sortNum != null">
        and sort_num =  #{tb.sortNum}
      </if>
    </where>
  </sql>
  
  <!-- the 'sort' sql for search -->
  <sql id="sort_sql">
    <trim>
      <if test="sort != null">
        ORDER BY
        <foreach collection="sort" index="key" item="value" open="" separator="," close="">
          <choose>
            <when test="key!=null and 'id'.equalsIgnoreCase(key)">
              id
            </when>
            <when test="key!=null and 'fgoodsId'.equalsIgnoreCase(key)">
              f_goods_id
            </when>
            <when test="key!=null and 'status'.equalsIgnoreCase(key)">
              status
            </when>
            <when test="key!=null and 'fgroupId'.equalsIgnoreCase(key)">
              f_group_id
            </when>
            <when test="key!=null and 'ct'.equalsIgnoreCase(key)">
              c_t
            </when>
            <when test="key!=null and 'ut'.equalsIgnoreCase(key)">
              u_t
            </when>
            <when test="key!=null and 'isDeleted'.equalsIgnoreCase(key)">
              is_deleted
            </when>
            <when test="key!=null and 'sortNum'.equalsIgnoreCase(key)">
              sort_num
            </when>
          </choose>
          <choose>
            <when test="'asc'.equalsIgnoreCase(value)">
              asc
            </when>
            <when test="'desc'.equalsIgnoreCase(value)">
              desc
            </when>
            <otherwise>
              asc
            </otherwise>
          </choose>
        </foreach>
      </if>
    </trim>
  </sql>
  
  <!-- the 'set' sql for search -->
  <sql id="update_sql">
    <set>
      <if test="id != null">
        id =  #{id} ,
      </if>
      <if test="fgoodsId != null">
        f_goods_id =  #{fgoodsId} ,
      </if>
      <if test="status != null">
        status =  #{status} ,
      </if>
      <if test="fgroupId != null">
        f_group_id =  #{fgroupId} ,
      </if>
      <if test="ct != null">
        c_t =  #{ct} ,
      </if>
      <if test="ut != null">
        u_t =  #{ut} ,
      </if>
      <if test="isDeleted != null">
        is_deleted =  #{isDeleted} ,
      </if>
      <if test="sortNum != null">
        sort_num =  #{sortNum} ,
      </if>
    </set>
  </sql>
  
  <!-- the 'set' sql with table alias for search -->
  <sql id="update_with_alias_sql">
    <set>
      <if test="id != null">
        id = #{id} ,
      </if>
      <if test="fgoodsId != null">
        f_goods_id = #{fgoodsId} ,
      </if>
      <if test="status != null">
        status = #{status} ,
      </if>
      <if test="fgroupId != null">
        f_group_id = #{fgroupId} ,
      </if>
      <if test="ct != null">
        c_t = #{ct} ,
      </if>
      <if test="ut != null">
        u_t = #{ut} ,
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted} ,
      </if>
      <if test="sortNum != null">
        sort_num = #{sortNum} ,
      </if>
    </set>
  </sql>
  
  <!-- update the table by 'id' sql -->
  <update id="updateById" parameterType="java.util.Map">
    UPDATE $tableBean.getTableName() 
    <include refid="update_with_alias_sql"/>
	<where>
		and id = #{id}
	</where>
  </update>

  <!-- insert value sql -->
  <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
      INSERT INTO t_market_group_goods
        (
			id,f_goods_id,status,f_group_id,c_t,	
			u_t,is_deleted,sort_num	
		)
      VALUES
      	(
			#{id},#{fgoodsId},#{status},#{fgroupId},#{ct},	
			#{ut},#{isDeleted},#{sortNum}	
      	)
    ]]>
  </insert>	

  <!-- insert into table withnot null -->
  <insert id="insertNotNull" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO  t_market_group_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fgoodsId != null">
        f_goods_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="fgroupId != null">
        f_group_id,
      </if>
      <if test="ct != null">
        c_t,
      </if>
      <if test="ut != null">
        u_t,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="sortNum != null">
        sort_num,
      </if>
    </trim>
    <trim prefix="  VALUES(" suffix=")" suffixOverrides=",">
      <if test="id != null">
         #{id} ,
      </if>
      <if test="fgoodsId != null">
         #{fgoodsId} ,
      </if>
      <if test="status != null">
         #{status} ,
      </if>
      <if test="fgroupId != null">
         #{fgroupId} ,
      </if>
      <if test="ct != null">
         #{ct} ,
      </if>
      <if test="ut != null">
         #{ut} ,
      </if>
      <if test="isDeleted != null">
         #{isDeleted} ,
      </if>
      <if test="sortNum != null">
         #{sortNum} ,
      </if>
    </trim>
  </insert>


  <!--insert batch into table -->
  <insert id="insertBatch" parameterType="java.util.List">
    INSERT INTO t_market_group_goods
      (
			id,f_goods_id,status,f_group_id,c_t,
			u_t,is_deleted,sort_num
		)
    VALUES
    <foreach collection="list" item="item" open="" separator="," close="">
    	(
			#{item.id},#{item.fgoodsId},#{item.status},#{item.fgroupId},#{item.ct},
			#{item.ut},#{item.isDeleted},#{item.sortNum}
    	)
    </foreach>
  </insert>
  
  <!-- get the records by id -->
  <select id="getById" resultMap="rm_GroupGoodsModel">
    SELECT
    <include refid="columns"/>
    <![CDATA[
      FROM t_market_group_goods 
    ]]>
	<where>
		and id =#{id}
	</where>
  </select>

  <!-- get the records by ids -->
  <select id="getByIds" resultMap="rm_GroupGoodsModel" parameterType="java.util.List">
    SELECT
    <include refid="columns"/>
    FROM t_market_group_goods
	  WHERE id in
    <foreach collection="list" item="item" open="(" separator="," close=")">
     #{item}      
    </foreach>
  </select>  

  <!-- get the records by condition -->
  <select id="select" resultMap="rm_GroupGoodsModel">
    SELECT * FROM t_market_group_goods
    <include refid="where_with_alias_sql"/>
    <include refid="sort_sql"/>
    <choose>
      <when test="limit != null  and offset != null">
        limit #{limit} offset  #{offset}  
      </when>
      <when test="limit != null  and offset == null">
        limit #{limit} 
      </when>
    </choose>
  </select>

  <!-- get the count by condition -->
  <select id="selectCount" resultType="int">
    SELECT count(1) FROM t_market_group_goods
    <include refid="where_with_alias_sql"/>
  </select>
 
  <!-- delete the records by conditions -->
  <delete id="delete">
    DELETE FROM t_market_group_goods
    <include refid="where_sql"/>
  </delete>

  <!-- deleted the records by id -->
  <delete id="deleteById">
    DELETE FROM t_market_group_goods
    <where>
		and id = #{id},
    </where>
  </delete>

  <!-- deleted the records by ids -->
  <delete id="deleteByIds" parameterType="java.util.List">
    delete from t_market_group_goods 
      WHERE id in
    <foreach collection="list" item="item" open="(" separator="," close=")">      
	  #{item}
    </foreach>
  </delete> 
</mapper>
