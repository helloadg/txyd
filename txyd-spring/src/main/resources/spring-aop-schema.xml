<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
        xmlns:aop="http://www.springframework.org/schema/aop"  
        xsi:schemaLocation="  
           http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
           http://www.springframework.org/schema/aop  
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
           

    <!-- 目标类 -->
    <bean id="helloService" class="test.spring.aop.HelloService" />
    
    <bean id="helloAspect" class="test.spring.aop.HelloAspect" />
    
    <!-- aop:advisor，是有顺序的，必须放在aop:pointcut之后 -->
    <!-- 配置切面 -->
    <!-- 以下使用了两种方法定义切入点  pointcut-ref和pointcut -->
    <bean id="helloArroundAdvice" class="test.spring.aop.HelloAroundAdvice" />
    <aop:config>
        <aop:pointcut id="helloPointcut" expression="execution(* test.spring.aop..*.*(..))" />
        <aop:advisor advice-ref="helloArroundAdvice" pointcut-ref="helloPointcut"/>        
    </aop:config>
    <!-- 配置切面 
    <aop:config>
        <aop:pointcut id="helloPointcut" expression="execution(* test.spring.aop..*.*(..))" />
        <aop:aspect ref="helloAspect">
            <aop:before pointcut-ref="helloPointcut" method="beforeAdvice" />
            <aop:after pointcut="execution(* test.spring.aop..*.*(..))" method="afterFinallyAdvice" />
        </aop:aspect>        
    </aop:config>
    -->
</beans>