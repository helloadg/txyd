##类文件的package模版
package ${jcb.basePackageModel.toLowerCase()};
##类文件的import模版
#foreach($import in $importSet)
import $import ;
#end
##类文件的注解import模版
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
##类文件的class注释模版
/**		
 * 数据库类型：${tableBean.databaseType}
 * 表所属schema：${tableBean.tableSchema}
 * 表所属用户：${tableBean.tableOwner}
 * 表名称：${tableBean.tableName}
 * 表注释：${tableBean.comments}
 * 类型：${tableBean.tableType}
 * @author：${jcb.author}
 */
##类文件的class注解模版
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(JsonInclude.Include.NON_NULL)
#set ($extendsClass = "")  
#if(${tableBean.primaryKeyNum} >1)
	#set ($extendsClass =  ${tableBean.javabeanKeyClassName} )  
#elseif(${tableBean.primaryKeyNum} <= 1)
	#set ($extendsClass =  ${tableBean.javabeanBaseModelClassName} ) 
#end
public class ${tableBean.javabeanModelClassName} extends ${extendsClass} {
##类文件的属性模版
#foreach ($columnBean in $columnBeanList)
#if(!(${tableBean.primaryKeyNum} >1 && ${columnBean.isPrimaryKey}) )
	/**
	 * 是否可以为NULL：${columnBean.nullAble}
	 * 列类型：${columnBean.columnType}
	 * 默认值：${columnBean.defaultValue}
	 * 列的数据类型的长度：${columnBean.dataLength}
	 * 列注释：${StringUtil.newLine2Html($columnBean.comments)}
	 * 列的扩展：${columnBean.extra}
	 * 列名：${columnBean.columnName}
	 * 列的数据类型：${columnBean.dataType}
	 * 是否是主键：${columnBean.primaryKey}
	 */
	@JsonProperty("${columnBean.columnName}")
	private ${columnBean.javabeanFieldDataTypeSimple} ${columnBean.javabeanFieldName};	
#end
#end

##类文件的方法模版
#foreach ($columnBean in $columnBeanList)
#if(!(${tableBean.primaryKeyNum} >1 && ${columnBean.isPrimaryKey}) )
	public ${columnBean.javabeanFieldDataTypeSimple} get${StringUtil.getJavabeanFieldNameOfSetGetMethod($columnBean.javabeanFieldName)}(){
		return this.${columnBean.javabeanFieldName};
	}
	
	public void set${StringUtil.getJavabeanFieldNameOfSetGetMethod($columnBean.javabeanFieldName)}(${columnBean.javabeanFieldDataTypeSimple} ${columnBean.javabeanFieldName}){
		this.${columnBean.javabeanFieldName} = ${columnBean.javabeanFieldName};
	}
#end
#end
}